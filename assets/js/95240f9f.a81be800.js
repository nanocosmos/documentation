"use strict";(self.webpackChunknanocosomos_documentation=self.webpackChunknanocosomos_documentation||[]).push([[9328],{15680:(e,t,l)=>{l.d(t,{xA:()=>s,yg:()=>p});var n=l(96540);function r(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function a(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function g(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?a(Object(l),!0).forEach((function(t){r(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):a(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function u(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var d=n.createContext({}),o=function(e){var t=n.useContext(d),l=t;return e&&(l="function"==typeof e?e(t):g(g({},t),e)),l},s=function(e){var t=o(e.components);return n.createElement(d.Provider,{value:t},e.children)},y="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var l=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),y=o(l),c=r,p=y["".concat(d,".").concat(c)]||y[c]||i[c]||a;return l?n.createElement(p,g(g({ref:t},s),{},{components:l})):n.createElement(p,g({ref:t},s))}));function p(e,t){var l=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=l.length,g=new Array(a);g[0]=c;var u={};for(var d in t)hasOwnProperty.call(t,d)&&(u[d]=t[d]);u.originalType=e,u[y]="string"==typeof e?e:r,g[1]=u;for(var o=2;o<a;o++)g[o]=l[o];return n.createElement.apply(null,g)}return n.createElement.apply(null,l)}c.displayName="MDXCreateElement"},93749:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>d,contentTitle:()=>g,default:()=>i,frontMatter:()=>a,metadata:()=>u,toc:()=>o});var n=l(58168),r=(l(96540),l(15680));const a={id:"nanostream_webrtc_api",title:"nanoStream Webcaster API",sidebar_label:"Webcaster"},g=void 0,u={unversionedId:"webrtc-v5/nanostream_webrtc_api",id:"webrtc-v5/nanostream_webrtc_api",title:"nanoStream Webcaster API",description:"RtcUser",source:"@site/docs/webrtc-v5/nanostream_webrtc_api.md",sourceDirName:"webrtc-v5",slug:"/webrtc-v5/nanostream_webrtc_api",permalink:"/docs/webrtc-v5/nanostream_webrtc_api",draft:!1,tags:[],version:"current",lastUpdatedAt:1725285352,formattedLastUpdatedAt:"Sep 2, 2024",frontMatter:{id:"nanostream_webrtc_api",title:"nanoStream Webcaster API",sidebar_label:"Webcaster"},sidebar:"nanoStream Webcaster V5",previous:{title:"Automatic Reconnection",permalink:"/docs/webrtc-v5/nanostream_webrtc_reconnect"}},d={},o=[{value:"RtcUser",id:"rtcuser",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new RtcUser()",id:"new-rtcuser",level:2},{value:"Example",id:"example",level:4},{value:"Functions",id:"functions",level:2},{value:"rtcUser.checkSupport() \u21d2 <code>int</code>",id:"rtcuserchecksupport--int",level:2},{value:"Example",id:"example-1",level:4},{value:"rtcUser.signIn(options)",id:"rtcusersigninoptions",level:2},{value:"Example <em>(sign in with JWT)</em>",id:"example-sign-in-with-jwt",level:4},{value:"Example <em>(sign in with bintu API key)</em>",id:"example-sign-in-with-bintu-api-key",level:4},{value:"rtcUser.signOut()",id:"rtcusersignout",level:2},{value:"Example",id:"example-2",level:4},{value:"rtcUser.isSignedIn() \u21d2 <code>boolean</code>",id:"rtcuserissignedin--boolean",level:2},{value:"Example",id:"example-3",level:4},{value:"rtcUser.setConfig(config)",id:"rtcusersetconfigconfig",level:2},{value:"Example",id:"example-4",level:4},{value:"<del>rtcUser.setIceServers(iceServers)</del>",id:"rtcuserseticeserversiceservers",level:2},{value:"Example",id:"example-5",level:4},{value:"rtcUser.checkServer()",id:"rtcusercheckserver",level:2},{value:"Example",id:"example-6",level:4},{value:"rtcUser.enableStats(enable, interval)",id:"rtcuserenablestatsenable-interval",level:2},{value:"Example",id:"example-7",level:4},{value:"rtcUser.startBroadcast(config)",id:"rtcuserstartbroadcastconfig",level:2},{value:"Example <em>(Start a webcast with a JWT)</em>",id:"example-start-a-webcast-with-a-jwt",level:4},{value:"Example <em>(Start a webcast with rtmp url and rtmp stream name)</em>",id:"example-start-a-webcast-with-rtmp-url-and-rtmp-stream-name",level:4},{value:"rtcUser.stopBroadcast()",id:"rtcuserstopbroadcast",level:2},{value:"Example",id:"example-8",level:4},{value:"rtcUser.sendMetaData(handlerName, jsonValues)",id:"rtcusersendmetadatahandlername-jsonvalues",level:2},{value:"Example",id:"example-9",level:4},{value:"<del>rtcUser.addScreenCaptureExtension(name)</del>",id:"rtcuseraddscreencaptureextensionname",level:2},{value:"Example",id:"example-10",level:4},{value:"rtcUser.isScreenCaptureAvailable()",id:"rtcuserisscreencaptureavailable",level:2},{value:"Example",id:"example-11",level:4},{value:"rtcUser.getDevices()",id:"rtcusergetdevices",level:2},{value:"Example",id:"example-12",level:4},{value:"<del>rtcUser.setVideoDevice(config)</del>",id:"rtcusersetvideodeviceconfig",level:2},{value:"Example",id:"example-13",level:4},{value:"Example",id:"example-14",level:4},{value:"Example",id:"example-15",level:4},{value:"Example",id:"example-16",level:4},{value:"<del>rtcUser.setAudioDevice(config)</del>",id:"rtcusersetaudiodeviceconfig",level:2},{value:"Example",id:"example-17",level:4},{value:"Example",id:"example-18",level:4},{value:"Example",id:"example-19",level:4},{value:"Example",id:"example-20",level:4},{value:"<del>rtcUser.getSelectedVideoDevice()</del>",id:"rtcusergetselectedvideodevice",level:2},{value:"Example",id:"example-21",level:4},{value:"<del>rtcUser.getSelectedAudioDevice()</del>",id:"rtcusergetselectedaudiodevice",level:2},{value:"Example",id:"example-22",level:4},{value:"rtcUser.getSelectedDevice(config)",id:"rtcusergetselecteddeviceconfig",level:2},{value:"Example",id:"example-23",level:4},{value:"rtcUser.startPreview(config)",id:"rtcuserstartpreviewconfig",level:2},{value:"Example <em>(Audio &amp; video.)</em>",id:"example-audio--video",level:4},{value:"Example <em>(Audio &amp; screen capture.)</em>",id:"example-audio--screen-capture",level:4},{value:"Example <em>(Video only.)</em>",id:"example-video-only",level:4},{value:"Example <em>(Audio only.)</em>",id:"example-audio-only",level:4},{value:"Example <em>(Audio only with all preprocessing disabled.)</em>",id:"example-audio-only-with-all-preprocessing-disabled",level:4},{value:"rtcUser.stopPreview()",id:"rtcuserstoppreview",level:2},{value:"Example",id:"example-24",level:4},{value:"<del>rtcUser.muteVideo(mute)</del>",id:"rtcusermutevideomute",level:2},{value:"Example",id:"example-25",level:4},{value:"<del>rtcUser.muteAudio(mute)</del>",id:"rtcusermuteaudiomute",level:2},{value:"Example",id:"example-26",level:4},{value:"rtcUser.muteDevice(config)",id:"rtcusermutedeviceconfig",level:2},{value:"Example",id:"example-27",level:4},{value:"rtcUser.injectExternalMediaStream(config)",id:"rtcuserinjectexternalmediastreamconfig",level:2},{value:"Example",id:"example-28",level:4},{value:"rtcUser.setMediaStream(config)",id:"rtcusersetmediastreamconfig",level:2},{value:"Context:",id:"context",level:4},{value:"Restrictions:",id:"restrictions",level:4},{value:"Example",id:"example-29",level:4},{value:"Events",id:"events",level:2},{value:"&quot;SignInSuccess&quot;",id:"signinsuccess",level:2},{value:"&quot;SignInError&quot;",id:"signinerror",level:2},{value:"&quot;SignOutSuccess&quot;",id:"signoutsuccess",level:2},{value:"&quot;SignOutError&quot;",id:"signouterror",level:2},{value:"&quot;SetConfigError&quot;",id:"setconfigerror",level:2},{value:"&quot;ReceivedServerStats&quot;",id:"receivedserverstats",level:2},{value:"&quot;ReceivedWebRTCStats&quot;",id:"receivedwebrtcstats",level:2},{value:"&quot;StartBroadcastSuccess&quot;",id:"startbroadcastsuccess",level:2},{value:"&quot;StartBroadcastError&quot;",id:"startbroadcasterror",level:2},{value:"&quot;BroadcastStatus&quot;",id:"broadcaststatus",level:2},{value:"&quot;BroadcastError&quot;",id:"broadcasterror",level:2},{value:"&quot;StopBroadcastSuccess&quot;",id:"stopbroadcastsuccess",level:2},{value:"&quot;StopBroadcastError&quot;",id:"stopbroadcasterror",level:2},{value:"&quot;ReceivedDeviceList&quot;",id:"receiveddevicelist",level:2},{value:"&quot;GetDevicesError&quot;",id:"getdeviceserror",level:2},{value:"&quot;GetSelectedDeviceError&quot;",id:"getselecteddeviceerror",level:2},{value:"&quot;StartPreviewSuccess&quot;",id:"startpreviewsuccess",level:2},{value:"&quot;StartPreviewError&quot;",id:"startpreviewerror",level:2},{value:"&quot;StopPreviewSuccess&quot;",id:"stoppreviewsuccess",level:2},{value:"&quot;StopPreviewError&quot;",id:"stoppreviewerror",level:2},{value:"&quot;MuteDeviceError&quot;",id:"mutedeviceerror",level:2},{value:"Type Definitions",id:"type-definitions",level:2},{value:"ErrorEvent : <code>object</code>",id:"errorevent--object",level:2},{value:"SuccessEvent : <code>object</code>",id:"successevent--object",level:2},{value:"StatusEvent : <code>object</code>",id:"statusevent--object",level:2},{value:"DevicesReceivedEvent : <code>object</code>",id:"devicesreceivedevent--object",level:2},{value:"StartPreviewSuccessEvent : <code>object</code>",id:"startpreviewsuccessevent--object",level:2},{value:"SignInSuccessEvent : <code>object</code>",id:"signinsuccessevent--object",level:2},{value:"ServerStatsEvent : <code>object</code>",id:"serverstatsevent--object",level:2},{value:"WebRTCStatsEvent : <code>object</code>",id:"webrtcstatsevent--object",level:2},{value:"ErrorCode : <code>number</code>",id:"errorcode--number",level:2}],s={toc:o},y="wrapper";function i(e){let{components:t,...l}=e;return(0,r.yg)(y,(0,n.A)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("a",{name:"RtcUser"}),(0,r.yg)("h2",{id:"rtcuser"},"RtcUser"),(0,r.yg)("p",null,"nanoStream Webcaster Public API Class"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": global class",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Version"),": 5.16.0  "),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"constructors"},"Constructors"),(0,r.yg)("a",{name:"new_RtcUser_new"}),(0,r.yg)("h2",{id:"new-rtcuser"},"new RtcUser()"),(0,r.yg)("p",null,"An RtcUser is the main class and entry point of the nanoStream Webcaster API."),(0,r.yg)("h4",{id:"example"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"var rtcUser = new RtcUser();\n")),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"functions"},"Functions"),(0,r.yg)("a",{name:"RtcUser+checkSupport"}),(0,r.yg)("h2",{id:"rtcuserchecksupport--int"},"rtcUser.checkSupport() \u21d2 ",(0,r.yg)("code",null,"int")),(0,r.yg)("p",null,"Checks if nanoStream Webcaster is supported by current browser."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("h4",{id:"example-1"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"var supportLevel = RtcUser.checkSupport();\n// 0: fully supported, no expected issues\n// 1: not supported\n// 2: partly supported - an outdated browser version\n// 3: partly supported - a critically outdated browser version or a browser with issues, e.g. Edge\n")),(0,r.yg)("a",{name:"RtcUser+signIn"}),(0,r.yg)("h2",{id:"rtcusersigninoptions"},"rtcUser.signIn(options)"),(0,r.yg)("p",null,"Signs in to the server.\nAfter signIn succeeded you will have a session with the Webcaster server until reloading the browser or calling ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+signOut"},"signOut"),'.\nParameters in braces "',"[ ]",'" are optional.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_SignInSuccess"},(0,r.yg)("code",null,"SignInSuccess")),", ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_SignInError"},(0,r.yg)("code",null,"SignInError")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"options"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The options object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"options.server"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The URL to the Webcaster server."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[options.jwt]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The JWT access token for authentication. The JWT contains the ingest information, please also pass it in ",(0,r.yg)("a",{href:"#RtcUser+startBroadcast"},"startBroadcast")))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[options.bintuApiKey]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The bintu API key for authentication."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[options.token]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The access token for authentication - Deprecated: Please migrate to use JWT for authentication."))),"  ")),(0,r.yg)("h4",{id:"example-sign-in-with-jwt"},"Example ",(0,r.yg)("em",{parentName:"h4"},"(sign in with JWT)")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\n\nvar options = {\n    server : 'https://bintu-webrtc.nanocosmos.de/p/webrtcws',\n    jwt : 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Im5hbm9jb3Ntb3MifQ...'\n};\n\nrtcUser.signIn(options);\n")),(0,r.yg)("h4",{id:"example-sign-in-with-bintu-api-key"},"Example ",(0,r.yg)("em",{parentName:"h4"},"(sign in with bintu API key)")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\n\nvar options = {\n    server : 'https://bintu-webrtc.nanocosmos.de/p/webrtcws',\n    bintuApiKey : 'awdegfq3490puerg2w54zj2p0w4h46zphm694i0796...'\n};\n\nrtcUser.signIn(options);\n")),(0,r.yg)("a",{name:"RtcUser+signOut"}),(0,r.yg)("h2",{id:"rtcusersignout"},"rtcUser.signOut()"),(0,r.yg)("p",null,"Signs out from the server. The current session and a broadcast (if running) will be stopped."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_SignOutSuccess"},(0,r.yg)("code",null,"SignOutSuccess")),", ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_SignOutError"},(0,r.yg)("code",null,"SignOutError")),"  "),(0,r.yg)("h4",{id:"example-2"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nrtcUser.signOut();\n")),(0,r.yg)("a",{name:"RtcUser+isSignedIn"}),(0,r.yg)("h2",{id:"rtcuserissignedin--boolean"},"rtcUser.isSignedIn() \u21d2 ",(0,r.yg)("code",null,"boolean")),(0,r.yg)("p",null,"Checks if the RtcUser is connected with the Webcaster server and signed in (see ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+signIn"},"signIn"),")."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("h4",{id:"example-3"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nif (rtcUser.isSignedIn()) {\n    console.log('signed in');\n} else {\n    console.log('not signed in');\n}\n")),(0,r.yg)("a",{name:"RtcUser+setConfig"}),(0,r.yg)("h2",{id:"rtcusersetconfigconfig"},"rtcUser.setConfig(config)"),(0,r.yg)("p",null,"Sets global configuration for the RtcUser instance.\nPlease note that setting the audio transcoding bitrate is currently done in ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+startBroadcast"},"startBroadcast"),'.\nParameters in braces "',"[ ]",'" are optional.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_SetConfigError"},(0,r.yg)("code",null,"SetConfigError")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Default"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"config"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The config object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.logLevel]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"0")," | ",(0,r.yg)("code",null,"1")," | ",(0,r.yg)("code",null,"2")," | ",(0,r.yg)("code",null,"3")," | ",(0,r.yg)("code",null,"4")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"Verbosity of console logging. Allowed values: 0 (minimum verbosity) - 4 (maximum verbosity)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.metrics]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The metrics configuration object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.metrics.accountId]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"An account id provided to you."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.metrics.accountKey]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"An account key provided to you."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.metrics.eventId]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"An id of an event a stream is related to."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.metrics.statsInterval]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("code",null,"10")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The interval how often the stats should be collected in seconds. Allowed values: 5 - 10 second(s)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.metrics.customField*]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A custom field. * can be replaced with 1 - 10 e.g. 'customField3'. Possible from 'customField1' to 'customField10'."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.reconnect]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The reconnect configuration object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.reconnect.minDelay]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("code",null,"1")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Minimum delay for a reconnect attempt in seconds. Minimum value: 1."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.reconnect.maxDelay]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("code",null,"8")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Maximum delay for a reconnect attempt in seconds. Minimum value: 1."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.reconnect.maxRetries]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("code",null,"10")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Maximum amount of successive attempts to reconnect a broken webcast before failure. Setting this to 0 will disable reconnection."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.bitrates]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The codec configuration object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.bitrates.videoSendInitialBitrate]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("code",null,"0")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The minimum video upstream bitrate in kbps (lower bound, does not work in Firefox). Allowed values: 0 - 34000 kbps."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.bitrates.videoSendBitrate]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("code",null,"0")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The maximum video upstream bitrate in kbps. Allowed values: 0 - 34000 kbps."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.bitrates.audioSendBitrate]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("code",null,"0")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The maximum audio upstream bitrate in kbps (does not work in Firefox). Allowed values: 0 - 510 kbps."))),"  ")),(0,r.yg)("h4",{id:"example-4"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    logLevel: 2,\n    metrics: {\n        accountId: 'YOUR_ACCOUNT_ID',\n        accountKey: 'YOUR_ACCOUNT_KEY'\n    },\n    bitrates: {\n        videoSendInitialBitrate: 500,\n        videoSendBitrate: 1000\n    },\n    reconnect: {\n        minDelay: 2,\n        maxDelay: 8,\n        maxRetries: 10\n    }\n};\nrtcUser.setConfig(config);\n")),(0,r.yg)("a",{name:"RtcUser+setIceServers"}),(0,r.yg)("h2",{id:"rtcuserseticeserversiceservers"},(0,r.yg)("del",null,"rtcUser.setIceServers(iceServers)")),(0,r.yg)("admonition",{title:"deprecated",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"This method is deprecated.")),(0,r.yg)("p",null,'Sets an array of turn/stun-servers for the peer-to-peer connection.\nParameters in braces "',"[ ]",'" are optional.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"iceServers"),(0,r.yg)("td",null,(0,r.yg)("code",null,"Array.<object>")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The ice servers object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"iceServers[].urls"),(0,r.yg)("td",null,(0,r.yg)("code",null,"Array.<string>")),(0,r.yg)("td",null,(0,r.yg)("p",null,"An array of URLs."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[iceServers[].username]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The username for the ice servers if required."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[iceServers[].credential]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The password for the ice servers if required."))),"  ")),(0,r.yg)("h4",{id:"example-5"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar iceServers = [\n    {\n        urls: [\n            'turn:turn.nanocosmos.de:80?transport=udp'\n        ],\n        username: 'username',\n        credential: 'password'\n    }\n];\nrtcUser.setIceServers(iceServers);\n")),(0,r.yg)("a",{name:"RtcUser+checkServer"}),(0,r.yg)("h2",{id:"rtcusercheckserver"},"rtcUser.checkServer()"),(0,r.yg)("p",null,"Checks the state of a Webcaster server."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_ReceivedServerStats"},(0,r.yg)("code",null,"ReceivedServerStats")),"  "),(0,r.yg)("h4",{id:"example-6"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nrtcUser.checkServer();\nrtcUser.on('ReceivedServerStats', function(event) {\n     console.log(event.data);\n});\n")),(0,r.yg)("a",{name:"RtcUser+enableStats"}),(0,r.yg)("h2",{id:"rtcuserenablestatsenable-interval"},"rtcUser.enableStats(","[enable]",", ","[interval]",")"),(0,r.yg)("p",null,'Enables to receive WebRTC stats in a given time interval.\nParameters in braces "',"[ ]",'" are optional.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_ReceivedWebRTCStats"},(0,r.yg)("code",null,"ReceivedWebRTCStats")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Default"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"[enable]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null,(0,r.yg)("code",null,"true")),(0,r.yg)("td",null,(0,r.yg)("p",null,"A flag to enable WebRTC stats."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[interval]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("code",null,"1000")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The interval time in milliseconds. The minimum value: 1 second."))),"  ")),(0,r.yg)("h4",{id:"example-7"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nrtcUser.enableStats();\nrtcUser.on('ReceivedWebRTCStats', function(event) {\n     console.log(JSON.stringify(event.data.results));\n});\n")),(0,r.yg)("a",{name:"RtcUser+startBroadcast"}),(0,r.yg)("h2",{id:"rtcuserstartbroadcastconfig"},"rtcUser.startBroadcast(config)"),(0,r.yg)("p",null,"Starts a broadcast to an RTMP ingest URL. Note: by default, only audio will be transcoded on server side, H264 codec will be used for video upstream and passed through directly to RTMP.\nTherefore you will find the configuration for the video upstream bitrate here: ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+setConfig"},"setConfig"),'.\nParameters in braces "',"[ ]",'" are optional.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_StartBroadcastSuccess"},(0,r.yg)("code",null,"StartBroadcastSuccess")),", ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_StartBroadcastError"},(0,r.yg)("code",null,"StartBroadcastError")),", ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_BroadcastStatus"},(0,r.yg)("code",null,"BroadcastStatus")),", ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_BroadcastError"},(0,r.yg)("code",null,"BroadcastError")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Default"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"config"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The config object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.transcodingTargets"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The transcoding config object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.transcodingTargets.output"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The RTMP ingest URL."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.transcodingTargets.streamname"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("code",null,"null")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The RTMP streamname."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.transcodingTargets.audiobitrate]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("code",null,"0")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The RTMP audio transcoded bitrate in bps, eg 64000."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.transcodingTargets.rtmpconnectinfo]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("code",null)),(0,r.yg)("td",null,(0,r.yg)("p",null,'Data to be send with the RTMP streams "onconnect". Pass flat object with key value pairs, hierarchies are not supported.'))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.encoding]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The encoding config object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.encoding.h264Profile]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"'cbp'")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The H264 profile. Note: the H264 profile should only be set to 'cbp' in desktop Chrome (Windows)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.jwt]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A JWT containing ingest information can be passed. This will replace usage of transcodingTargets.streamname & transcodingTargets.output. Note that the JWT can be passed in ",(0,r.yg)("a",{href:"#RtcUser+signIn"},"signIn")," as authorization method."))),"  ")),(0,r.yg)("h4",{id:"example-start-a-webcast-with-a-jwt"},"Example ",(0,r.yg)("em",{parentName:"h4"},"(Start a webcast with a JWT)")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\n\nrtcUser.startBroadcast({\n           jwt: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Im5hbm9jb3Ntb3MifQ...' \n});\n")),(0,r.yg)("h4",{id:"example-start-a-webcast-with-rtmp-url-and-rtmp-stream-name"},"Example ",(0,r.yg)("em",{parentName:"h4"},"(Start a webcast with rtmp url and rtmp stream name)")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\n\nvar config = {\n    transcodingTargets: {\n        output: 'rtmp://bintu-stream.nanocosmos.de:1935/live',\n        streamname: 'xAuOp-IaIYi',\n        audiobitrate: 64000,\n        rtmpconnectinfo: {\n            'key1': 'value1',\n            'key2': 7.5,\n            'key3': false\n        }\n    }\n};\n\nrtcUser.startBroadcast(config);\n")),(0,r.yg)("a",{name:"RtcUser+stopBroadcast"}),(0,r.yg)("h2",{id:"rtcuserstopbroadcast"},"rtcUser.stopBroadcast()"),(0,r.yg)("p",null,"Stops a running broadcast."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_StopBroadcastSuccess"},(0,r.yg)("code",null,"StopBroadcastSuccess")),", ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_BroadcastError"},(0,r.yg)("code",null,"BroadcastError")),"  "),(0,r.yg)("h4",{id:"example-8"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nrtcUser.stopBroadcast();\n")),(0,r.yg)("a",{name:"RtcUser+sendMetaData"}),(0,r.yg)("h2",{id:"rtcusersendmetadatahandlername-jsonvalues"},"rtcUser.sendMetaData(handlerName, jsonValues)"),(0,r.yg)("p",null,"Adds live meta data to a broadcast stream."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("code",null,"RtcUser#event:Error"),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"handlerName"),(0,r.yg)("td",null,(0,r.yg)("code",null,"'onMetaData'")," | ",(0,r.yg)("code",null,"'onCuePoint'")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Name of the meta data handler. Other types are not supported."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"jsonValues"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The data to be sent. The parameter can contain a maximum object depth of 6."))),"  ")),(0,r.yg)("h4",{id:"example-9"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nrtcUser.sendMetaData('onMetaData', {myString: 'hello', myInteger: 1234});\n")),(0,r.yg)("a",{name:"RtcUser+addScreenCaptureExtension"}),(0,r.yg)("h2",{id:"rtcuseraddscreencaptureextensionname"},(0,r.yg)("del",null,"rtcUser.addScreenCaptureExtension(name)")),(0,r.yg)("admonition",{title:"deprecated",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"This method is deprecated.")),(0,r.yg)("p",null,"Adds a Screen Capture Extension to the RtcUser for Chrome. Only needed in Chrome version < 72."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"name"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The name of the screen capture extension."))),"  ")),(0,r.yg)("h4",{id:"example-10"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar name = 'nanoScreenCapture';\nrtcUser.addScreenCaptureExtension(name);\n")),(0,r.yg)("a",{name:"RtcUser+isScreenCaptureAvailable"}),(0,r.yg)("h2",{id:"rtcuserisscreencaptureavailable"},"rtcUser.isScreenCaptureAvailable()"),(0,r.yg)("p",null,"Checks if a Screen Capture Extension was added via addScreenCaptureExtension()."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("h4",{id:"example-11"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar name = 'nanoScreenCapture';\nrtcUser.addScreenCaptureExtension(name);\n// wait until api has registered extension:\nsetTimeout(function() {\n    var hasScreenCapture = rtcUser.isScreenCaptureAvailable();\n}, 1000);\n")),(0,r.yg)("a",{name:"RtcUser+getDevices"}),(0,r.yg)("h2",{id:"rtcusergetdevices"},"rtcUser.getDevices()"),(0,r.yg)("p",null,"Gets all connected input video and audio devices."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_ReceivedDeviceList"},(0,r.yg)("code",null,"ReceivedDeviceList")),", ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_GetDevicesError"},(0,r.yg)("code",null,"GetDevicesError")),"  "),(0,r.yg)("h4",{id:"example-12"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nrtcUser.getDevices();\n")),(0,r.yg)("a",{name:"RtcUser+setVideoDevice"}),(0,r.yg)("h2",{id:"rtcusersetvideodeviceconfig"},(0,r.yg)("del",null,"rtcUser.setVideoDevice(config)")),(0,r.yg)("admonition",{title:"deprecated",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"This method is deprecated.")),(0,r.yg)("p",null,'Sets the input video device with config.\nParameters in braces "',"[ ]",'" are optional.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"config"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The config object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.device"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")," | ",(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The value of the video device, possible values: true (auto device), false (no video), number (index of the video device)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.width]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The input width (only if device will be set by index)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.height]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The input height (only if device will be set by index)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.framerate]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The input framerate (only if device will be set by index)."))),"  ")),(0,r.yg)("h4",{id:"example-13"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    device: 0,\n    width: 640,\n    height: 360,\n    framerate: 30\n};\nrtcUser.setVideoDevice(config);\n")),(0,r.yg)("h4",{id:"example-14"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    device: 0\n};\nrtcUser.setVideoDevice(config);\n")),(0,r.yg)("h4",{id:"example-15"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    device: true // auto device\n};\nrtcUser.setVideoDevice(config);\n")),(0,r.yg)("h4",{id:"example-16"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    device: false // no video\n};\nrtcUser.setVideoDevice(config);\n")),(0,r.yg)("a",{name:"RtcUser+setAudioDevice"}),(0,r.yg)("h2",{id:"rtcusersetaudiodeviceconfig"},(0,r.yg)("del",null,"rtcUser.setAudioDevice(config)")),(0,r.yg)("admonition",{title:"deprecated",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"This method is deprecated.")),(0,r.yg)("p",null,"Sets the input audio device."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"config"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The config object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.device"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")," | ",(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The value of the audio device, possible values: true (auto device), false (no audio), number (index of the audio device)."))),"  ")),(0,r.yg)("h4",{id:"example-17"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    device: 0\n};\nrtcUser.setAudioDevice(config);\n")),(0,r.yg)("h4",{id:"example-18"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    device: 0\n};\nrtcUser.setAudioDevice(config);\n")),(0,r.yg)("h4",{id:"example-19"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    device: true // auto device\n};\nrtcUser.setAudioDevice(config);\n")),(0,r.yg)("h4",{id:"example-20"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    device: false // no video\n};\nrtcUser.setAudioDevice(config);\n")),(0,r.yg)("a",{name:"RtcUser+getSelectedVideoDevice"}),(0,r.yg)("h2",{id:"rtcusergetselectedvideodevice"},(0,r.yg)("del",null,"rtcUser.getSelectedVideoDevice()")),(0,r.yg)("admonition",{title:"deprecated",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"This method is deprecated.")),(0,r.yg)("p",null,"Gets the current input video device."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("h4",{id:"example-21"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar device = rtcUser.getSelectedVideoDevice();\n")),(0,r.yg)("a",{name:"RtcUser+getSelectedAudioDevice"}),(0,r.yg)("h2",{id:"rtcusergetselectedaudiodevice"},(0,r.yg)("del",null,"rtcUser.getSelectedAudioDevice()")),(0,r.yg)("admonition",{title:"deprecated",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"This method is deprecated.")),(0,r.yg)("p",null,"Gets the current input audio device."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("h4",{id:"example-22"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar device = rtcUser.getSelectedAudioDevice();\n")),(0,r.yg)("a",{name:"RtcUser+getSelectedDevice"}),(0,r.yg)("h2",{id:"rtcusergetselecteddeviceconfig"},"rtcUser.getSelectedDevice(config)"),(0,r.yg)("p",null,"Gets the current input video/audio device."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_GetSelectedDeviceError"},(0,r.yg)("code",null,"GetSelectedDeviceError")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"config"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The config object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.kind"),(0,r.yg)("td",null,(0,r.yg)("code",null,"'videoinput'")," | ",(0,r.yg)("code",null,"'audioinput'")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The device kind."))),"  ")),(0,r.yg)("h4",{id:"example-23"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    kind: 'videoinput'\n};\nvar device = rtcUser.getSelectedDevice(config);\n")),(0,r.yg)("a",{name:"RtcUser+startPreview"}),(0,r.yg)("h2",{id:"rtcuserstartpreviewconfig"},"rtcUser.startPreview(config)"),(0,r.yg)("p",null,'Starts the preview.\nParameters in braces "',"[ ]",'" are optional.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_StartPreviewSuccess"},(0,r.yg)("code",null,"StartPreviewSuccess")),", ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_ReceivedDeviceList"},(0,r.yg)("code",null,"ReceivedDeviceList")),", ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_StartPreviewError"},(0,r.yg)("code",null,"StartPreviewError")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Default"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"config"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The config object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.videoDeviceConfig"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video config object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.videoDeviceConfig.device"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")," | ",(0,r.yg)("code",null,"number")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The device id to use. Allowed values: 0...n - specific device, true - auto device, false - no video."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.videoDeviceConfig.width]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video width. Allowed values: 320 - 3840(4K)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.videoDeviceConfig.height]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video height. Allowed values: 240 - 2160(4K)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.videoDeviceConfig.framerate]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video framerate. Allowed values: 0 - 60 fps."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"videoDeviceConfig.source"),(0,r.yg)("td",null,(0,r.yg)("code",null,"'camera'")," | ",(0,r.yg)("code",null,"'screen'")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video source to be requested."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.audioDeviceConfig"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The audio config object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.audioDeviceConfig.device"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")," | ",(0,r.yg)("code",null,"number")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The device id to use. Allowed values: 0...n - specific device, true - auto device, false - no audio."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.audioDeviceConfig.autoGainControl]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"Automatic gain control attempts to automatically maintain a steady overall volume level."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.audioDeviceConfig.echoCancellation]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"Echo cancellation attempts to prevent echo effects."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.audioDeviceConfig.noiseSuppression]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"Noise suppression automatically filters the audio to remove background noise."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.elementId"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The id of a video element to pass in the requested stream directly."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.useWebView]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null,(0,r.yg)("code",null,"false")),(0,r.yg)("td",null,(0,r.yg)("p",null,"A flag to indicate that a WebView is used."))),"  ")),(0,r.yg)("h4",{id:"example-audio--video"},"Example ",(0,r.yg)("em",{parentName:"h4"},"(Audio ","&"," video.)")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    videoDeviceConfig : {\n         device: 0, // video is enabled using specific device\n         width: 640,\n         height: 360,\n         framerate: 30,\n         source: 'camera'\n    },\n    audioDeviceConfig : {\n         device: 0 // audio is enabled using specific device\n    },\n    elementId : 'video-local',\n    useWebView : true\n};\nrtcUser.startPreview(config);\n")),(0,r.yg)("h4",{id:"example-audio--screen-capture"},"Example ",(0,r.yg)("em",{parentName:"h4"},"(Audio ","&"," screen capture.)")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    videoDeviceConfig : {\n         width: 640,\n         height: 360,\n         framerate: 30,\n         source: 'screen'\n    },\n    audioDeviceConfig : {\n         device: 0 // audio is enabled using specific device\n    },\n    elementId : 'video-local',\n    useWebView : true\n};\nrtcUser.startPreview(config);\n")),(0,r.yg)("h4",{id:"example-video-only"},"Example ",(0,r.yg)("em",{parentName:"h4"},"(Video only.)")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    videoDeviceConfig : {\n         device: 0, // video is enabled using specific device\n         width: 640,\n         height: 360,\n         framerate: 30,\n         source: 'camera'\n    },\n    audioDeviceConfig : {\n         device: false // no audio; video-only preview\n    },\n    elementId : 'video-local',\n    useWebView : false\n};\nrtcUser.startPreview(config);\n")),(0,r.yg)("h4",{id:"example-audio-only"},"Example ",(0,r.yg)("em",{parentName:"h4"},"(Audio only.)")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    videoDeviceConfig : {\n         device: false // no video; audio-only preview\n    },\n    audioDeviceConfig : {\n         device: 0 // audio is enabled using specific device\n    },\n    elementId : 'video-local',\n    useWebView : false\n};\nrtcUser.startPreview(config);\n")),(0,r.yg)("h4",{id:"example-audio-only-with-all-preprocessing-disabled"},"Example ",(0,r.yg)("em",{parentName:"h4"},"(Audio only with all preprocessing disabled.)")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    videoDeviceConfig : {\n         device: false // no video; audio-only preview\n    },\n    audioDeviceConfig : {\n         device: 0, // audio is enabled using specific device\n         autoGainControl: false,\n         echoCancellation: false,\n         noiseSuppression: false\n    },\n    elementId : 'video-local',\n    useWebView : false\n};\nrtcUser.startPreview(config);\n")),(0,r.yg)("a",{name:"RtcUser+stopPreview"}),(0,r.yg)("h2",{id:"rtcuserstoppreview"},"rtcUser.stopPreview()"),(0,r.yg)("p",null,"Stops the preview."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_StopPreviewSuccess"},(0,r.yg)("code",null,"StopPreviewSuccess")),", ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_StopPreviewError"},(0,r.yg)("code",null,"StopPreviewError")),"  "),(0,r.yg)("h4",{id:"example-24"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nrtcUser.stopPreview();\n")),(0,r.yg)("a",{name:"RtcUser+muteVideo"}),(0,r.yg)("h2",{id:"rtcusermutevideomute"},(0,r.yg)("del",null,"rtcUser.muteVideo(mute)")),(0,r.yg)("admonition",{title:"deprecated",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"This method is deprecated.")),(0,r.yg)("p",null,"Mutes/unmutes the video."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"mute"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Mute/unmute."))),"  ")),(0,r.yg)("h4",{id:"example-25"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar mute = true;\nrtcUser.muteVideo(mute);\n")),(0,r.yg)("a",{name:"RtcUser+muteAudio"}),(0,r.yg)("h2",{id:"rtcusermuteaudiomute"},(0,r.yg)("del",null,"rtcUser.muteAudio(mute)")),(0,r.yg)("admonition",{title:"deprecated",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"This method is deprecated.")),(0,r.yg)("p",null,"Mutes/unmutes the audio."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"mute"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Mute/unmute."))),"  ")),(0,r.yg)("h4",{id:"example-26"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar mute = true;\nrtcUser.muteAudio(mute);\n")),(0,r.yg)("a",{name:"RtcUser+muteDevice"}),(0,r.yg)("h2",{id:"rtcusermutedeviceconfig"},"rtcUser.muteDevice(config)"),(0,r.yg)("p",null,"Mutes/unmutes a video/audio device."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Emits"),": ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+event_MuteDeviceError"},(0,r.yg)("code",null,"MuteDeviceError")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"config"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The config object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.kind"),(0,r.yg)("td",null,(0,r.yg)("code",null,"'videoinput'")," | ",(0,r.yg)("code",null,"'audioinput'")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The device kind to mute."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.mute"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null,(0,r.yg)("p",null,"A flag to mute/unmute the device."))),"  ")),(0,r.yg)("h4",{id:"example-27"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\nvar config = {\n    kind: 'videoinput',\n    mute: true\n}\nrtcUser.muteDevice(config);\n")),(0,r.yg)("a",{name:"RtcUser+injectExternalMediaStream"}),(0,r.yg)("h2",{id:"rtcuserinjectexternalmediastreamconfig"},"rtcUser.injectExternalMediaStream(config)"),(0,r.yg)("p",null,"Mixes tracks (currently only audio) of an external MediaStream into the currently previewed local stream."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"config"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Config object with info on what to mix in."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.stream"),(0,r.yg)("td",null,(0,r.yg)("code",null,"MediaStream")),(0,r.yg)("td",null,(0,r.yg)("p",null,"the MediaStream containing the track(s) to mix in."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.tracks"),(0,r.yg)("td",null,(0,r.yg)("code",null,"Array.<string>")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Array with the types of tracks which should be injected (only 'audio' is supported at the moment)."))),"  ")),(0,r.yg)("h4",{id:"example-28"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\n// externalStream instance of MediaStream (https://developer.mozilla.org/de/docs/Web/API/MediaStream)\nvar data = {stream: externalStream, tracks: ['audio']};\nrtcUser.injectExternalMediaStream(data);\n")),(0,r.yg)("a",{name:"RtcUser+setMediaStream"}),(0,r.yg)("h2",{id:"rtcusersetmediastreamconfig"},"rtcUser.setMediaStream(config)"),(0,r.yg)("p",null,"Sets an ",(0,r.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/MediaStream"},"MediaStream")," that will\nbe used as source for webcasting instead of an internally created  stream (by your live cam or screen)."),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"If you simply intent to utilize a combination of camera, microphone or screen share sources:\nUse the ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser+startPreview"},"startPreview")," call.")),(0,r.yg)("h4",{id:"context"},"Context:"),(0,r.yg)("p",null,"It must contain one or two ",(0,r.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack"},"MediaStreamTracks"),",\none VideoStreamTrack and / or one AudioStreamTrack."),(0,r.yg)("p",null,"The MediaStream can be mixed together on application level by combining different sources:  "),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia"},"audio and video devices")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia"},"screen share sources")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/captureStream"},"rendering on HTML canvas")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioDestinationNode"},"WebAudio API"))),(0,r.yg)("h4",{id:"restrictions"},"Restrictions:"),(0,r.yg)("p",null,"When utilizing this API call, application developers are responsible for the externally created stream."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Maintaining the provided framerate")," is critical for end to end latency of the webcast."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Tab throttling.")," When the current tab gets out of focus, most browsers will enable tab throttling.\nTimers, like ",(0,r.yg)("inlineCode",{parentName:"li"},"setInterval"),", will be updated less frequently. You should check wether the tab left focus, and warn your users accordingly.\nE.g. with the DOM ",(0,r.yg)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilitychange_event"},"visibilitychange event")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Video dimensions (width & height)")," must not change during a webcast."),(0,r.yg)("li",{parentName:"ul"},"Under certain circumstances the browsers encoder will ",(0,r.yg)("strong",{parentName:"li"},"adapt the video resolution"),", for example when ",(0,r.yg)("strong",{parentName:"li"},"CPU overusage")," is being detected.")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),"  "),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Param"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"config"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The config object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"config.stream"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The ",(0,r.yg)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/MediaStream"},"MediaStream"),"."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.width]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video width. Allowed values: 320 - 3840(4K)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.height]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video height. Allowed values: 240 - 2160(4K)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[config.framerate]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The target video framerate. Allowed values: 0 - 60 fps."))),"  ")),(0,r.yg)("h4",{id:"example-29"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// rtcUser: instance of RtcUser\n// pass an MediaStream to the API\n\nvar canvasWidth = 1280;\nvar canvasHeight = 720;\nvar framerate = 30;\n\n// access your HTML canvas (<canvas id=\"my-canvas\"/> element)\nvar canvas = document.getElementById('my-canvas');\nvar context = canvas.getContext('2d');\n\n// create a MediaStream from the canvas\nvar canvasStream = canvas.captureStream(framerate);\n\n// optionally, add an AudioStreamTrack\nvar myAudioTrack = ...;\ncanvasStream.addTrack(myAudioTrack);\n\n// your render loop, the loop calls itself 30 (framerate) times per second\n// as an example, we simply draw the string \"Hello World\"\nfunction renderLoop() {\n    context.font = '50px serif';\n    context.fillText('Hello world', 50, 90);\n    setTimeout(loop, 1000 / framerate); // drawing at 30fps\n };\n\nvar config = {\n    stream: canvasStream,\n    width: canvasWidth,\n    height: canvasHeight,\n    framerate: framerate\n};\n\n// start the render loop\nrenderLoop();\n\nrtcUser.setMediaStream(config);\n")),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"events"},"Events"),(0,r.yg)("a",{name:"RtcUser+event_SignInSuccess"}),(0,r.yg)("h2",{id:"signinsuccess"},'"SignInSuccess"'),(0,r.yg)("p",null,"SignInSuccess event. The event is fired if sign in succeeded."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#SignInSuccessEvent"},(0,r.yg)("code",null,"SignInSuccessEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_SignInError"}),(0,r.yg)("h2",{id:"signinerror"},'"SignInError"'),(0,r.yg)("p",null,"SignInError event. The event is fired if sign in failed."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#ErrorEvent"},(0,r.yg)("code",null,"ErrorEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_SignOutSuccess"}),(0,r.yg)("h2",{id:"signoutsuccess"},'"SignOutSuccess"'),(0,r.yg)("p",null,"SignOutSuccess event. The event is fired if sign out succeeded. Session is now destroyed."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#SuccessEvent"},(0,r.yg)("code",null,"SuccessEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_SignOutError"}),(0,r.yg)("h2",{id:"signouterror"},'"SignOutError"'),(0,r.yg)("p",null,"SignOutError event. The event is fired if an error occured. Session is destroyed in any case."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#ErrorEvent"},(0,r.yg)("code",null,"ErrorEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_SetConfigError"}),(0,r.yg)("h2",{id:"setconfigerror"},'"SetConfigError"'),(0,r.yg)("p",null,"SetConfigError event. The event is fired if config failed to be set."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#ErrorEvent"},(0,r.yg)("code",null,"ErrorEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_ReceivedServerStats"}),(0,r.yg)("h2",{id:"receivedserverstats"},'"ReceivedServerStats"'),(0,r.yg)("p",null,"ReceivedServerStats event. The event is fired if server stats is received."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#ServerStatsEvent"},(0,r.yg)("code",null,"ServerStatsEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_ReceivedWebRTCStats"}),(0,r.yg)("h2",{id:"receivedwebrtcstats"},'"ReceivedWebRTCStats"'),(0,r.yg)("p",null,'ReceivedWebRTCStats event. The event is fired multiple times between the "start" and "stop" broadcast events. The payload contains WebRTC stats information.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#WebRTCStatsEvent"},(0,r.yg)("code",null,"WebRTCStatsEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_StartBroadcastSuccess"}),(0,r.yg)("h2",{id:"startbroadcastsuccess"},'"StartBroadcastSuccess"'),(0,r.yg)("p",null,"StartBroadcastSuccess event. The event is fired if a broadcast started successfully."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#SuccessEvent"},(0,r.yg)("code",null,"SuccessEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_StartBroadcastError"}),(0,r.yg)("h2",{id:"startbroadcasterror"},'"StartBroadcastError"'),(0,r.yg)("p",null,"StartBroadcastError event. The event is fired if a broadcast failed to start."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#ErrorEvent"},(0,r.yg)("code",null,"ErrorEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_BroadcastStatus"}),(0,r.yg)("h2",{id:"broadcaststatus"},'"BroadcastStatus"'),(0,r.yg)("p",null,'BroadcastStatus event. The event is fired multiple times between the "start" and "stop" broadcast events. The payload contains information about the connection state.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#StatusEvent"},(0,r.yg)("code",null,"StatusEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_BroadcastError"}),(0,r.yg)("h2",{id:"broadcasterror"},'"BroadcastError"'),(0,r.yg)("p",null,'BroadcastError event. The event is fired if a broadcasting error occurred between the "start" and "stop" broadcast events.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#ErrorEvent"},(0,r.yg)("code",null,"ErrorEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_StopBroadcastSuccess"}),(0,r.yg)("h2",{id:"stopbroadcastsuccess"},'"StopBroadcastSuccess"'),(0,r.yg)("p",null,"StopBroadcastSuccess event. The event is fired if a broadcast stopped successfully. It does not contain an event payload."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#SuccessEvent"},(0,r.yg)("code",null,"SuccessEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_StopBroadcastError"}),(0,r.yg)("h2",{id:"stopbroadcasterror"},'"StopBroadcastError"'),(0,r.yg)("p",null,'StopBroadcastError event. The event is fired if a broadcast failed to execute the "stop" call as it is expected. Note: the broadcast is guaranteed to stop before the event is fired.'),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#ErrorEvent"},(0,r.yg)("code",null,"ErrorEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_ReceivedDeviceList"}),(0,r.yg)("h2",{id:"receiveddevicelist"},'"ReceivedDeviceList"'),(0,r.yg)("p",null,"ReceivedDeviceList event. The event is fired if a list of connected input video and audio devices is received."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#DevicesReceivedEvent"},(0,r.yg)("code",null,"DevicesReceivedEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_GetDevicesError"}),(0,r.yg)("h2",{id:"getdeviceserror"},'"GetDevicesError"'),(0,r.yg)("p",null,"GetDevicesError event. The event is fired if an error occured while getting connected input video and audio devices."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#ErrorEvent"},(0,r.yg)("code",null,"ErrorEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_GetSelectedDeviceError"}),(0,r.yg)("h2",{id:"getselecteddeviceerror"},'"GetSelectedDeviceError"'),(0,r.yg)("p",null,"GetSelectedDeviceError event. The event is fired if a selected video/audio device getting failed."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#ErrorEvent"},(0,r.yg)("code",null,"ErrorEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_StartPreviewSuccess"}),(0,r.yg)("h2",{id:"startpreviewsuccess"},'"StartPreviewSuccess"'),(0,r.yg)("p",null,"StartPreviewSuccess event. The event is fired if a preview started successfully."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#StartPreviewSuccessEvent"},(0,r.yg)("code",null,"StartPreviewSuccessEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_StartPreviewError"}),(0,r.yg)("h2",{id:"startpreviewerror"},'"StartPreviewError"'),(0,r.yg)("p",null,"StartPreviewError event. The event is fired if a preview failed to start."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#ErrorEvent"},(0,r.yg)("code",null,"ErrorEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_StopPreviewSuccess"}),(0,r.yg)("h2",{id:"stoppreviewsuccess"},'"StopPreviewSuccess"'),(0,r.yg)("p",null,"StopPreviewSuccess event. The event is fired if a preview stopped successfully."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#SuccessEvent"},(0,r.yg)("code",null,"SuccessEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_StopPreviewError"}),(0,r.yg)("h2",{id:"stoppreviewerror"},'"StopPreviewError"'),(0,r.yg)("p",null,"StopPreviewError event. The event is fired if a preview failed to stop. Note: the preview is guaranteed to stop before the event is fired."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#ErrorEvent"},(0,r.yg)("code",null,"ErrorEvent")),"  "),(0,r.yg)("a",{name:"RtcUser+event_MuteDeviceError"}),(0,r.yg)("h2",{id:"mutedeviceerror"},'"MuteDeviceError"'),(0,r.yg)("p",null,"MuteDeviceError event. The event is fired if a video/audio device mute/unmute failed."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.yg)("a",{parentName:"p",href:"#RtcUser"},(0,r.yg)("code",null,"RtcUser")),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Typeof"),": ",(0,r.yg)("a",{parentName:"p",href:"#ErrorEvent"},(0,r.yg)("code",null,"ErrorEvent")),"  "),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"type-definitions"},"Type Definitions"),(0,r.yg)("a",{name:"ErrorEvent"}),(0,r.yg)("h2",{id:"errorevent--object"},"ErrorEvent : ",(0,r.yg)("code",null,"object")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": global typedef",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Name"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"data"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,'The data object - Deprecated: will be removed in nanoStream Webcaster v.6; please use the "error" object instead.'))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"error"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The error object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"error.code"),(0,r.yg)("td",null,(0,r.yg)("code",null,(0,r.yg)("a",{href:"#ErrorCode"},"ErrorCode"))),(0,r.yg)("td",null,(0,r.yg)("p",null,"The code of the error."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"error.message"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Human readable message of the error."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"error.name"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The name of the error."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"error.text"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,'The text of the error - Deprecated: will be removed in nanoStream Webcaster v.6; please use the "error.message" property instead.'))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"error.type"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The type of the error."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"error.userinfo"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The user info associated with the error."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[error.userinfo.metadata]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Metadata with additional state information."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[error.userinfo.metadata.sessionId]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Session id (defined only if signed in)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[error.userinfo.metadata.isSignedIn]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Wether a session to the server was established successfully."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[error.userinfo.metadata.server]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server url (defined only if a connection to the server was made)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[error.userinfo.metadata.streamname]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"RTMP stream name (defined only if a broadcast was started)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[error.userinfo.metadata.hasAudio]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Wether the current stream has an audio track."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[error.userinfo.metadata.hasVideo]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Wether the current stream has an video track."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[error.userinfo.metadata.isMobile]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Wether the current device is a mobile device."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[error.userinfo.metadata.browser]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Currently used browser."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[error.userinfo.metadata.browserVersion]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Currently used browser version."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[error.userinfo.metadata.os]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Current operating system."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"name"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The name of the event."))),"  ")),(0,r.yg)("a",{name:"SuccessEvent"}),(0,r.yg)("h2",{id:"successevent--object"},"SuccessEvent : ",(0,r.yg)("code",null,"object")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": global typedef",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Name"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The data object. Note: the property is optional, therefore, its presence is not guaranteed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.output]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The RTMP ingest URL. Note: the property is optional, therefore, its presence is not guaranteed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.streamname]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The RTMP ingest streamname. Note: the property is optional, therefore, its presence is not guaranteed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stream]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The stream object. Note: the property is optional, therefore, its presence is not guaranteed."))),"  ")),(0,r.yg)("a",{name:"StatusEvent"}),(0,r.yg)("h2",{id:"statusevent--object"},"StatusEvent : ",(0,r.yg)("code",null,"object")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": global typedef",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Name"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"data"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The data object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.message"),(0,r.yg)("td",null,(0,r.yg)("code",null,"'signalling'")," | ",(0,r.yg)("code",null,"'connected'")," | ",(0,r.yg)("code",null,"'reconnecting'")," | ",(0,r.yg)("code",null,"'broadcasting'")," | ",(0,r.yg)("code",null,"'reconnecting_broadcast'")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The connection state. Note that 'reconnecting' implies an RTMP reconnect on server side and 'reconnecting_broadcast' means a client side reconnect."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.number]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Reserverd for internal developer's use. Note: the property is optional, therefore, its presence is not guaranteed - Deprecated: will be removed in nanoStream Webcaster v.6."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.rtmp]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Reserved for internal developer's use. Note: the property is optional, therefore, its presence is not guaranteed - Deprecated: will be removed in nanoStream Webcaster v.6."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.state"),(0,r.yg)("td",null,(0,r.yg)("code",null,"4")," | ",(0,r.yg)("code",null,"5")," | ",(0,r.yg)("code",null,"6")," | ",(0,r.yg)("code",null,"7")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The connection state. Possible values: 4 = 'signalling', 5 = 'connected', 6 = 'broadcasting', 7 = 'reconnecting'."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.streamname"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The RTMP ingest streamname."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[name]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The name of the event. Note: the property is optional, therefore, its presence is not guaranteed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[target]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Reserved for internal developer's use. Note: the property is optional, therefore, its presence is not guaranteed - Deprecated: will be removed in nanoStream Webcaster v.6."))),"  ")),(0,r.yg)("a",{name:"DevicesReceivedEvent"}),(0,r.yg)("h2",{id:"devicesreceivedevent--object"},"DevicesReceivedEvent : ",(0,r.yg)("code",null,"object")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": global typedef",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Name"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"data"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The data object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.devices"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The audio and video devices object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.devices.audiodevices]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"Array.<object>")),(0,r.yg)("td",null,(0,r.yg)("p",null,"An array of connected input audio devices. Note: the property is optional, therefore, its presence is not guaranteed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.devices.audiodevices.id"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The id of an audio device."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.devices.audiodevices.index"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The index of an audio device. Note: indices start from 0."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.devices.videodevices]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"Array.<object>")),(0,r.yg)("td",null,(0,r.yg)("p",null,"An array of connected input video devices. Note: the property is optional, therefore, its presence is not guaranteed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.devices.videodevices.id"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The id of a video device."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.devices.videodevices.index"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The index of a video device. Note: indices start from 0."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.updated"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Reserved for internal developer's use - Deprecated: will be removed in nanoStream Webcaster v.6."))),"  ")),(0,r.yg)("a",{name:"StartPreviewSuccessEvent"}),(0,r.yg)("h2",{id:"startpreviewsuccessevent--object"},"StartPreviewSuccessEvent : ",(0,r.yg)("code",null,"object")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": global typedef",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Name"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"data"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The data object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.constraints"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The constraints object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.constraints.audio]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The audio constraints object. Note: the property is optional, therefore, its presence is not guaranteed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.constraints.audio.deviceId"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The id of an audio device."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.constraints.video]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video constraints object. Note: the property is optional, therefore, its presence is not guaranteed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.constraints.video.deviceId"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The id of a video device."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.constraints.video.framerate]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video framerate. Note: the property is optional, therefore, its presence is not guaranteed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.constraints.video.height]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video height. Note: the property is optional, therefore, its presence is not guaranteed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.constraints.video.source"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video source."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.constraints.video.width]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video width. Note: the property is optional, therefore, its presence is not guaranteed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.metadata"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The metadata object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.metadata.framerate"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video framerate set in metdata."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.metadata.hasAudio"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"A flag to indicate that audio is present."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.metadata.hasVideo"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"A flag to indicate that video is present."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.metadata.height"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video height set in metadata."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.metadata.width"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video width set in metadata."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stream"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The stream object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stream.active"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null,(0,r.yg)("p",null,"A flag to indicate that a stream is active."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stream.id"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The stream id."))),"  ")),(0,r.yg)("a",{name:"SignInSuccessEvent"}),(0,r.yg)("h2",{id:"signinsuccessevent--object"},"SignInSuccessEvent : ",(0,r.yg)("code",null,"object")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": global typedef",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Name"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"data"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The data object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.server"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The URL of the Webcaster server"))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.userId"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The user id of the Webcaster server."))),"  ")),(0,r.yg)("a",{name:"ServerStatsEvent"}),(0,r.yg)("h2",{id:"serverstatsevent--object"},"ServerStatsEvent : ",(0,r.yg)("code",null,"object")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": global typedef",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Name"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"data"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The data object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The stats object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.active_connections"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The total number of active connections to the Webcaster server."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.active_passthroughs"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The number of active connections with passthrough enabled to the Webcaster server."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.active_transcoders"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The number of active connections with transcoding enabled to the Webcaster server."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.cpu_load"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server CPU load."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.disk_space"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server disk space."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.domainname"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server domain name."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.hostname"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server host name."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.license"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server license."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.license.end"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The license expiration date."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.license.expired"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null,(0,r.yg)("p",null,"A flag to indicate that the license has expired."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.license.expiring"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null,(0,r.yg)("p",null,"A flag to indicate if the license has an end date or not."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.license.start"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The license issue date."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.license.valid"),(0,r.yg)("td",null,(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",null,(0,r.yg)("p",null,"A flag to indicate that the license is valid."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.max_cpu_load"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server maximum CPU load."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.max_transcoders"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server maximum number of transcoders."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.server_version"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The version of the Webcaster server."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.transcoder_version"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The version of the transcoder."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"name"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The name of the event."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"target"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Reserved for internal developer's use - Deprecated: will be removed in nanoStream Webcaster v.6."))),"  ")),(0,r.yg)("a",{name:"WebRTCStatsEvent"}),(0,r.yg)("h2",{id:"webrtcstatsevent--object"},"WebRTCStatsEvent : ",(0,r.yg)("code",null,"object")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": global typedef",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Name"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"data"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The data object."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.message"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The connection state message (expected value: 'broadcasting')."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.results"),(0,r.yg)("td",null,(0,r.yg)("code",null,"object")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The results object. It contains the stats key/value pairs. All stats in the result object are optional and are present based on the capabilities of the currently used browser."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.audioBitrate]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The audio bitrate in kbps."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.audioBitrateMin]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Minimum 'audioBitrate' during past 10 seconds."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.audioBitrateMax]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Maximum 'audioBitrate' during past 10 seconds."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.audioBitrateAverage]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Average 'audioBitrate' during past 10 seconds."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.audioCodec]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The audio codec."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.frameHeight]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video frame height  in pixels."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.frameWidth]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video frame width in pixels."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.framerate]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video frame rate in frames per second."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.framerateMin]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Minimum 'framerate' during past 10 seconds."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.framerateMax]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Maximum 'framerate' during past 10 seconds."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.framerateAverage]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Average 'framerate' during past 10 seconds."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.videoBitrate]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video bitrate in kbps."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.videoBitrateMin]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Minimum 'videoBitrate' during past 10 seconds."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.videoBitrateMax]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Maximum 'videoBitrate' during past 10 seconds."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.videoBitrateAverage]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Average 'videoBitrate' during past 10 seconds."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.videoCodec]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The video codec."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.videoSendDelay]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"An indication for video packet delay, before packets are send to the server."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.videoSendDelayMax]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Maximum 'videoSendDelay' during past 10 seconds."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.videoSendDelayAverage]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Average 'videoSendDelay' during past 10 seconds."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.packetLoss]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Percentage of packets lost during past 10 seconds."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"[data.stats.results.roundTripTime]"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Current time in milliseconds that data takes from the client to the webcaster server and back."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.state"),(0,r.yg)("td",null,(0,r.yg)("code",null,"number")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The connection state. The expected value: 6 = 'broadcasting'."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.streamname"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The RTMP ingest streamname."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"data.stats.text"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The connection state text. The expected value: 'broadcasting'."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"name"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"The name of the event."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"target"),(0,r.yg)("td",null,(0,r.yg)("code",null,"string")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Reserved for internal developer's use - Deprecated: will be removed in nanoStream Webcaster v.6."))),"  ")),(0,r.yg)("a",{name:"ErrorCode"}),(0,r.yg)("h2",{id:"errorcode--number"},"ErrorCode : ",(0,r.yg)("code",null,"number")),(0,r.yg)("p",null,"The possible client error codes in an ErrorEvent event."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Kind"),": global typedef",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"See"),": ",(0,r.yg)("a",{parentName:"p",href:"#ErrorEvent"},"ErrorEvent"),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Name"),(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Description"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",null,"1000-1999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"GeneralError")),(0,r.yg)("td",null)),(0,r.yg)("tr",null,(0,r.yg)("td",null,"1000"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A general error returned by any nanoStream Webcaster component (see the error message for more informaiton)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"1001"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A type is not valid."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"1002"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A value is not valid."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"1003"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"An enum value is not valid."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"1004"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"An object does not exist."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"1005"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A function is not defined."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"1006"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"An operation is not allowed to be executed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"2000-2999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"RequestError")),(0,r.yg)("td",null)),(0,r.yg)("tr",null,(0,r.yg)("td",null,"2000"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A general request error - Deprecated: will be removed in nanoStream Webcaster v.6."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"3000-3999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"WebSocketError")),(0,r.yg)("td",null)),(0,r.yg)("tr",null,(0,r.yg)("td",null,"3000"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A general WebSocket error (see the error message for more information)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"3001"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A WebSocket state is wrong (see an error message for more information)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"3002"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"An error occurred when creating a WebSocket."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"4000-4999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"SessionError")),(0,r.yg)("td",null)),(0,r.yg)("tr",null,(0,r.yg)("td",null,"4000"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"Sign in failed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"4001"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A session is not signed in."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"5000-5999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"BroadcastError")),(0,r.yg)("td",null)),(0,r.yg)("tr",null,(0,r.yg)("td",null,"5001"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A broadcast failed to start."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"5002"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A Broadcast failed after it was started (see the error message for more information)."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"5003"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"Stopping broadcast caused an error. Either no broadcast is runnung or an active broadcast is currently shutting down."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"6000-6999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"WebRTCError")),(0,r.yg)("td",null)),(0,r.yg)("tr",null,(0,r.yg)("td",null,"6000"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A media stream was received, but no video/audio data is coming from a device. The device could be in use from another application."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"6001"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A media stream was received, but it contains no tracks."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"6002"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A media stream was not found."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"6003"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A media stream was not removed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"6004"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,'No devices are available for "getUserMedia".'))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"6005"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A general \"getUserMedia\" error (may include: 'PermissionDenied', 'NotAllowedError', 'NotReadableError', 'NotFoundError', 'OverconstrainedError', 'AbortError', 'GetMediaError', 'NoDeviceError', 'NoStreamError')."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"6006"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"Devices failed to get enumerated."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"6008"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A general \"getDisplayMedia\" error (may include: 'PermissionDenied', 'NotAllowedError')."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"101000-109999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"ServerError")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server-side errors start with 10xxxx."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"101000-101999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"GeneralError")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server-side general errors."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"101001"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"An internal server error."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"101002"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A parameter is required."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"101003"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A data type is wrong."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"102000-102999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"AccessError")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server-side access errors."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"102001"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"Access is denied."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"103000-103999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"AuthenticationError")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server-side authentication errors."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"103000"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The server could not initialize authentication."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"103001"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"Wrong authentification data. A valid token, or username and password is/are required."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"103002"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"Access to a feature is forbidden (features: 'webrtc')."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"103003"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"JWT authentication failed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"103004"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"JWT contains an invalid stream."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"104000-104999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"BintuError")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server-side bintu related errors."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"104001"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A stream option is not allowed (options: 'webrtc', 'transcoding')."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"104002"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A bintu API key is invalid."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"105000-105999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"TranscoderError")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server-side configuration errors."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"106000-106999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"SystemMonitorError")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Server-side monitoring errors."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"106001"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"An error occured while retrieving system info."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"107000-107999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"SessionError")),(0,r.yg)("td",null)),(0,r.yg)("tr",null,(0,r.yg)("td",null,"107001"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A configuration is malformed."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"107002"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"A session is invalid."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"108000-108999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"ChatError")),(0,r.yg)("td",null,(0,r.yg)("p",null,"Deprecated."))),(0,r.yg)("tr",null,(0,r.yg)("td",null,"109000-109999"),(0,r.yg)("td",null,(0,r.yg)("code",null,"RTMPError")),(0,r.yg)("td",null)),(0,r.yg)("tr",null,(0,r.yg)("td",null,"109000"),(0,r.yg)("td",null),(0,r.yg)("td",null,(0,r.yg)("p",null,"The RTMP connection has failed."))),"  ")),(0,r.yg)("hr",null))}i.isMDXComponent=!0}}]);